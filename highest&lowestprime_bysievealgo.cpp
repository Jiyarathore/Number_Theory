#include<bits/stdc++.h>
using namespace std;

const int N = 1e7 + 10;
vector<bool> isPrime(N,1);
vector<int>lp(N,0), hp(N,0);

int main(){
    isPrime[0] = isPrime[1] = false;
    for(int i=2;i<N;i++){
        if(isPrime[i]==true){
            lp[i]=hp[i]=i;
            for(int j=2*i;j<N;j+=i){
                isPrime[j] =false;
                hp[j]=i;

                if(lp[i]==0){
                    lp[j]=i;
                }
            }
        }
    }
    for(int i=1;i<100;i++){
        cout<<i<<" "<<lp[i]<<" "<<hp[i]<<endl;
    }
}
// eg 36--lp=2 && hp=3
// 1 0 0
// 2 2 2
// 3 3 3
// 4 0 2
// 5 5 5
// 6 0 3
// 7 7 7
// 8 0 2
// 9 0 3
// 10 0 5
// 11 11 11
// 12 0 3
// 13 13 13
// 14 0 7
// 15 0 5
// 16 0 2
// 17 17 17
// 18 0 3
// 19 19 19
// 20 0 5
// 21 0 7
// 22 0 11
// 23 23 23
// 24 0 3
// 25 0 5
// 26 0 13
// 27 0 3
// 28 0 7
// 29 29 29
// 30 0 5
// 31 31 31
// 32 0 2
// 33 0 11
// 34 0 17
// 35 0 7
// 36 0 3
// 37 37 37
// 38 0 19
// 39 0 13
// 40 0 5
// 41 41 41
// 42 0 7
// 43 43 43
// 44 0 11
// 45 0 5
// 46 0 23
// 47 47 47
// 48 0 3
// 49 0 7
// 50 0 5
// 51 0 17
// 52 0 13
// 53 53 53
// 54 0 3
// 55 0 11
// 56 0 7
// 57 0 19
// 58 0 29
// 59 59 59
// 60 0 5
// 61 61 61
// 62 0 31
// 63 0 7
// 64 0 2
// 65 0 13
// 66 0 11
// 67 67 67
// 68 0 17
// 69 0 23
// 70 0 7
// 71 71 71
// 72 0 3
// 73 73 73
// 74 0 37
// 75 0 5
// 76 0 19
// 77 0 11
// 78 0 13
// 79 79 79
// 80 0 5
// 81 0 3
// 82 0 41
// 83 83 83
// 84 0 7
// 85 0 17
// 86 0 43
// 87 0 29
// 88 0 11
// 89 89 89
// 90 0 5
// 91 0 13
// 92 0 23
// 93 0 31
// 94 0 47
// 95 0 19
// 96 0 3
// 97 97 97
// 98 0 7
// 99 0 11